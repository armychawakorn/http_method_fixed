{
  "openapi": "3.0.0",
  "info": {
    "title": "Notes API",
    "description": "A RESTful API service for managing notes with CRUD operations built with Node.js, Express, and MongoDB.",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@notesapi.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local Development Server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication operations"
    },
    {
      "name": "Notes",
      "description": "Note management operations"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account and receive a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              },
              "example": {
                "name": "John Doe",
                "email": "john@example.com",
                "password": "password123"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate user and receive a JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              },
              "example": {
                "email": "john@example.com",
                "password": "password123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user",
        "description": "Get the currently authenticated user's information",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh JWT token",
        "description": "Get a new JWT token before the current one expires",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/notes": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get all notes",
        "description": "Get all notes for the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of notes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Notes"],
        "summary": "Create a new note",
        "description": "Create a new note for the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteInput"
              },
              "example": {
                "title": "Task for Today",
                "content": "Complete API documentation",
                "category": "Work"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/notes/{id}": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get a specific note",
        "description": "Get a specific note by ID for the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the note to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Notes"],
        "summary": "Update a note",
        "description": "Update a specific note by ID for the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the note to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteInput"
              },
              "example": {
                "title": "Updated Task",
                "content": "Completed API documentation",
                "category": "Work",
                "isCompleted": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Notes"],
        "summary": "Delete a note",
        "description": "Delete a specific note by ID for the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the note to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Note not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserRegistration": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password (min 6 characters)",
            "example": "password123"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": "password123"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "token": {
            "type": "string",
            "description": "JWT token for authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresIn": {
            "type": "string",
            "description": "Token expiration time",
            "example": "5m"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "User ID",
                "example": "60f7b0b9e6c7a83b3c3f3e5a"
              },
              "name": {
                "type": "string",
                "description": "User's full name",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "description": "User's email address",
                "example": "john@example.com"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Login successful. Token will expire in 5m"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "token": {
            "type": "string",
            "description": "New JWT token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresIn": {
            "type": "string",
            "description": "Token expiration time",
            "example": "5m"
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Token refreshed successfully"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User ID",
                "example": "60f7b0b9e6c7a83b3c3f3e5a"
              },
              "name": {
                "type": "string",
                "description": "User's full name",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "description": "User's email address",
                "example": "john@example.com"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "User creation timestamp",
                "example": "2023-07-21T10:30:00.000Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "User last update timestamp",
                "example": "2023-07-21T10:30:00.000Z"
              }
            }
          }
        }
      },
      "NoteInput": {
        "type": "object",
        "required": ["title", "content"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Note title",
            "example": "Meeting Notes"
          },
          "content": {
            "type": "string",
            "description": "Note content",
            "example": "Discuss project timeline"
          },
          "category": {
            "type": "string",
            "description": "Note category",
            "example": "Work"
          },
          "isCompleted": {
            "type": "boolean",
            "description": "Whether the note is completed",
            "example": false
          }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Note ID",
            "example": "60f7b0b9e6c7a83b3c3f3e5a"
          },
          "title": {
            "type": "string",
            "description": "Note title",
            "example": "Meeting Notes"
          },
          "content": {
            "type": "string",
            "description": "Note content",
            "example": "Discuss project timeline"
          },
          "category": {
            "type": "string",
            "description": "Note category",
            "example": "Work"
          },
          "isCompleted": {
            "type": "boolean",
            "description": "Whether the note is completed",
            "example": false
          },
          "user": {
            "type": "string",
            "description": "User ID who owns the note",
            "example": "60f7b0b9e6c7a83b3c3f3e5b"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Note creation timestamp",
            "example": "2023-07-21T10:30:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Note last update timestamp",
            "example": "2023-07-21T10:30:00.000Z"
          }
        }
      },
      "NoteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/Note"
          }
        }
      },
      "NotesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "count": {
            "type": "integer",
            "description": "Number of notes returned",
            "example": 2
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Not authorized to access this route"
          },
          "errors": {
            "type": "array",
            "description": "List of validation errors",
            "items": {
              "type": "string"
            },
            "example": ["Title is required", "Content is required"]
          }
        }
      }
    }
  }
}
